<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>题解：CF1407D Discrete Centrifugal Jumps</title>
      <link href="/2021/08/12/%E9%A2%98%E8%A7%A3%EF%BC%9ACF1407D-Discrete-Centrifugal-Jumps/"/>
      <url>/2021/08/12/%E9%A2%98%E8%A7%A3%EF%BC%9ACF1407D-Discrete-Centrifugal-Jumps/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题意简析"><a href="#题意简析" class="headerlink" title="题意简析"></a>题意简析</h2><ul><li>给你 $n$ 座楼，没座楼的高度为 $h_i$。</li><li>初始在第一座楼，你需要跳到第 $n$ 座楼上。</li><li>能从 $i$ 跳到 $j$ 需满足以下条件之一：</li></ul><p>$1. i = j + 1$</p><p>$2. \min(h_i,h_j) &gt; \max(h_{i+1},h_{i+2},…,h_{j-2},h_{j-1})$</p><p>$3. \max(h_i,h_j) &lt; \min(h_{i+1},h_{i+2},…,h_{j-2},h_{j-1})$</p><ol start="4"><li>问你最小需要跳几次？</li><li>$2\le n \le 3\times 10^5$,$1\le h_i \le 10^9$。</li></ol><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>&#8195;&#8195;显然，这是一道 dp 题。但是直接暴力枚举 $i,j$，和枚举区间最大值和最小值，复杂度为 $O(n^3)$。可能某些神仙能把它优化到 $O(n^2)$，但是本题仍不能过。考虑 $O(n\log n)$ 的算法。</p><p>这里考虑单调栈。什么是单调栈？</p><p>单调栈，是指一个栈中，所有的元素均满足一种<strong>单调性</strong>。它可以是升序，也可以是降序，只要满足单调皆可。</p><p>在这里，区间的最大值，最小值，都可以存到一个单调栈中，每次需要查找或更新时，将栈中的元素取出即可。这一复杂度为 $O(\log n)$。<del>就很神仙。</del></p><p>那么在本题中，我们可以开两个栈，分别为升序和降序，表示题意中最大值和最小值能跳跃的条件。方便规定，我们将栈顶元素最大表示为降序。记 $s$ 表示降序的单调栈，且 $s$ 中保存的元素是它在 $h$ 中的编号。</p><p>对于这种情况：假设我们当前枚举到了 $i$，让 $h_i$ 与栈顶 $h_{s_{tot}}$ 进行比较。如果 $h_i\le h_{s_{tot}}$，违背了单调性，需要让 $tot=tot-1$，但是在这种情况，满足我们跳跃的第二种条件。因为单调性，所以 $h_{s_{tot-1}}\le h_{s_{tot}}$，且 $h_{s_{tot}}$ 是 $[tot,i]$ 中的最大值，又已知  $h_i\le h_{s_{tot}}$，只要$h_i\not = h_{s_{tot}}$ 肯定满足 $\min(h_i,h_{s_{tot-1}})&lt;\max(h_{s_{tot}},…,h_{i-1})$，固有：<br>$$dp_i=\min(dp_i,dp_{s_{tot-1}}+1)$$</p><p>升序同理。<br>当然，最初<br>$$dp_i=dp_{i-1}+1$$</p><p>这样我们就轻松的解决了这道题。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><del>其实也没啥好总结的。</del> 用单调栈优化 dp。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e5</span> + <span class="number">7</span>;;</span><br><span class="line"><span class="keyword">int</span> s[N], dp[N], a[N], b[N];</span><br><span class="line"><span class="keyword">int</span> tot1, tot2;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> x &gt; y ? x : y;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> x &lt; y ? x : y;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> c = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span> (!<span class="built_in">isdigit</span>(c))&#123;<span class="keyword">if</span> (c == <span class="string">&#x27;-&#x27;</span>) f = <span class="number">-1</span>; c = <span class="built_in">getchar</span>();&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">isdigit</span>(c))&#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>; c = <span class="built_in">getchar</span>();&#125;</span><br><span class="line"><span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) s[i] = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">memset</span>(dp, <span class="number">0x3f3f3f3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dp));</span><br><span class="line">a[++ tot1] = <span class="number">1</span>, b[++ tot2] = <span class="number">1</span>, dp[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i ++)&#123;</span><br><span class="line">dp[i] = dp[i - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (tot1 &amp;&amp; s[i] &gt;= s[a[tot1]])&#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] != s[a[tot1]]) dp[i] = <span class="built_in">min</span>(dp[i], dp[a[tot1 - <span class="number">1</span>]] + <span class="number">1</span>);</span><br><span class="line">tot1 --;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (tot2 &amp;&amp; s[i] &lt;= s[b[tot2]])&#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] != s[b[tot2]]) dp[i] = <span class="built_in">min</span>(dp[i], dp[b[tot2 - <span class="number">1</span>]] + <span class="number">1</span>);</span><br><span class="line">tot2 --;</span><br><span class="line">&#125; </span><br><span class="line">a[++ tot1] = i, b[++ tot2] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, dp[n]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> OI/题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/08/12/hello-world/"/>
      <url>/2021/08/12/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
